package org.example;

import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import java.io.*;
import java.util.Base64;

public class AESExample {
    public static void main(String[] args) throws Exception {
        // Ключ 128 бит (16 байт)
        String key = "1234567890123456";

        // Чтение исходного
        byte[] inputData;
        try (FileInputStream fis = new FileInputStream("input.txt")) {
            inputData = fis.readAllBytes();
        }

        // Шифруем
        byte[] encrypted = encrypt(inputData, key);

        // Запись
        try (FileOutputStream fos = new FileOutputStream("encrypted.dat")) {
            fos.write(encrypted);
        }

        // Расшифровка
        byte[] decrypted = decrypt(encrypted, key);
        try (FileOutputStream fos = new FileOutputStream("decrypted.txt")) {
            fos.write(decrypted);
        }
    }

    public static byte[] encrypt(byte[] data, String key) throws Exception {
        Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5Padding");
        SecretKeySpec secretKey = new SecretKeySpec(key.getBytes(), "AES");
        cipher.init(Cipher.ENCRYPT_MODE, secretKey);
        return cipher.doFinal(data);
    }

    public static byte[] decrypt(byte[] data, String key) throws Exception {
        Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5Padding");
        SecretKeySpec secretKey = new SecretKeySpec(key.getBytes(), "AES");
        cipher.init(Cipher.DECRYPT_MODE, secretKey);
        return cipher.doFinal(data);
    }
}
